include/master-slave.inc
[connection master]
include/rpl_connect.inc [creating slave2]
connection slave;
include/stop_slave.inc
SET @old_parallel_threads= @@GLOBAL.slave_parallel_threads;
SET GLOBAL slave_parallel_threads= 8;
SET @old_parallel_mode= @@GLOBAL.slave_parallel_mode;
SET GLOBAL slave_parallel_mode=optimistic;
SET @old_dbug= @@GLOBAL.debug_dbug;
CHANGE MASTER TO master_use_gtid=slave_pos;
include/start_slave.inc
connection master;
*** Prepare some base data for some parallel transactions to update.
ALTER TABLE mysql.gtid_slave_pos ENGINE=InnoDB;
CREATE TABLE t1 (a INT PRIMARY KEY, b INT) ENGINE=InnoDB;
INSERT INTO t1 VALUES (0,0);
BEGIN;
COMMIT;
include/save_master_gtid.inc
connection slave;
include/sync_with_master_gtid.inc
include/stop_slave.inc
connection slave1;
*** Block most transactions from completing, so we can check that STOP SLAVE FORCE aborts them.
BEGIN;
SELECT * FROM t1 WHERE a>=200 AND a<300 FOR UPDATE;
connection slave;
include/start_slave.inc
connection master;
*** The main queries. The first query may or may not be replicated before
*** STOP SLAVE FORCE, but all the rest should be aborted.
connection slave2;
SET GLOBAL debug_dbug="+d,rpl_parallel_wait_for_done_trigger";
STOP SLAVE FORCE;
connection slave;
SET debug_sync="now WAIT_FOR wait_for_done_waiting";
connection slave1;
*** Now allow transactions to complete the blocked query. They should all
*** abort the final COMMIT/XID event since STOP SLAVE FORCE is in progress.
ROLLBACK;
connection slave2;
connection slave;
include/wait_for_slave_to_stop.inc
*** Check that STOP SLAVE FORCE stops early, aborting active transactions.
SELECT 'Yes, correct' AS correct_slave_stop_pos;
correct_slave_stop_pos
Yes, correct
*** Clean up.
SET DEBUG_SYNC= "RESET";
SET GLOBAL slave_parallel_threads= @old_parallel_threads;
SET GLOBAL slave_parallel_mode= @old_parallel_mode;
SET GLOBAL debug_dbug=@old_dbug;
include/start_slave.inc
connection master;
DROP TABLE t1;
include/save_master_gtid.inc
connection slave;
include/sync_with_master_gtid.inc
include/rpl_end.inc
